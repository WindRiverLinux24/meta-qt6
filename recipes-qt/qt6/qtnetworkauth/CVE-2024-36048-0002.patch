From d2a285f90ae131b9851b9d12b6f6c7e12f2268a1 Mon Sep 17 00:00:00 2001
From: Thiago Macieira <thiago.macieira@intel.com>
Date: Wed, 8 May 2024 12:34:21 -0700
Subject: [PATCH] QAbstractOAuth: just use QRandomGenerator::system()

This amends 5c0c90b6e5c3cdabd6ad41d5b6478250c8877f48 to remove the
Mersenne Twister and uniform distribution generator from <random> in
favor of just using QRandomGenerator::bounded().

This function is used by QOAuth1::nonce() to generate the nonce, so
using the best random generator we have available (within reason) is a
good idea. The Mersenne Twister is probably (more than) good enough, but
the system generator is definitely better. Given this is used to
generate only 8 characters (with a maximum of 255) in something used in
a network transaction, it won't violate the rule of using
QRandomGenerator::system() for too much data.

Pick-to: 5.15 6.2 6.5 6.7 6.8
Change-Id: Ie30a3caf09ef4176bb36fffd17cd9a7551caf999
Reviewed-by: Dimitrios Apostolou <jimis@qt.io>
Reviewed-by: Volker Hilsheimer <volker.hilsheimer@qt.io>

CVE: CVE-2024-36048

Upstream-Status: Backport [https://codereview.qt-project.org/gitweb?p=qt/qtnetworkauth.git;a=patch;h=d2a285f90ae131b9851b9d12b6f6c7e12f2268a1]
Signed-off-by: Archana Polampalli <archana.polampalli@windriver.com>
Signed-off-by: Divya Chellam <divya.chellam@windriver.com>
---
 src/oauth/qabstractoauth.cpp | 12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

diff --git a/src/oauth/qabstractoauth.cpp b/src/oauth/qabstractoauth.cpp
index f98fd28..ab59c28 100644
--- a/src/oauth/qabstractoauth.cpp
+++ b/src/oauth/qabstractoauth.cpp
@@ -22,8 +22,6 @@
 #include <QtCore/qrandom.h>
 #include <QtCore/private/qlocking_p.h>

-#include <random>
-
 QT_BEGIN_NAMESPACE

 /*!
@@ -275,19 +273,15 @@ void QAbstractOAuthPrivate::setStatus(QAbstractOAuth::Status newStatus)
     }
 }

-Q_CONSTINIT static QBasicMutex prngMutex;
-Q_GLOBAL_STATIC_WITH_ARGS(std::mt19937, prng, (*QRandomGenerator::system()))
-
 QByteArray QAbstractOAuthPrivate::generateRandomString(quint8 length)
 {
     constexpr char characters[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
-    std::uniform_int_distribution<int> distribution(0, sizeof(characters) - 2);
+    const int len = strlen(characters);
     QByteArray data;
     data.reserve(length);
-    auto lock = qt_unique_lock(prngMutex);
+    QRandomGenerator *prng = QRandomGenerator::system();
     for (quint8 i = 0; i < length; ++i)
-        data.append(characters[distribution(*prng)]);
-    lock.unlock();
+        data.append(characters[prng->bounded(len)]);
     return data;
 }

--
2.40.0
